@use "global" as *;



.is-active::before{
    transform: translate(-50%, -50%) rotate(0);
    opacity: 0;
}

// ========================================
// ハンバーガー
// ========================================

.is_btnAct {
    span {
        &:nth-of-type(1) {
            top: rem(20);
            left: rem(12);
            transform: translateY(6px) rotate(-135deg);
            width: rem(45);
        }
        &:nth-of-type(2) {
            opacity: 0;
        }
        &:nth-of-type(3){
            top: rem(32);
            left: rem(12);
            transform: translateY(-6px) rotate(135deg);
            width: rem(45);
        }
        &:nth-of-type(4){
            opacity: 1;
        }
    }
    &:hover {
        span {
            &:nth-of-type(1) {
                top: rem(20);
                left: rem(12);
            }
            &:nth-of-type(3){
                top: rem(32);
                left: rem(12);
            }
            &:nth-of-type(4){
                color: $white;
                transform: rotateY(360deg);
            }
        }
    }
}

//トップメニュー////////////////////
.is-menu__open{
    right: 0 !important;
}

// ========================================
// header変形グループ
// ========================================

.is-header_op07_h80_slidein {
    height: rem(70);
    padding: rem(0) rem(8);
    background-color: rgba(245, 245, 245, 0.5);
    transition: 0.5s;
    position: relative;
    animation: DownAnime 1s forwards;
    position: fixed;
    backdrop-filter: blur(3px);
    &:hover {
        background-color: $bg-white;
    }
}

.is-header_txtNone {
    display: none;
}

.is-header-bottom {
    height: rem(70);
}

.is-header-logo {
    width: rem(125);
    height: rem(62);
}

.is-header-fc {
    a {
        color: $main;
    }
}



@keyframes DownAnime{
    from {
        opacity: 0;
        transform: translateY(-80px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}


// ================================================
// タイトル waveアニメ
// ================================================
@keyframes wave {
    0% {
        transform: translate3d(0, 0, 0);
    }
    100% {
        transform: translate3d(0, -20px, 0);
    }
}

.js-wave{
    display:inline-block;
    opacity: 0;
    letter-spacing: -0.25em;
    transition: 0.5s;
}

.is-show__wave{
    opacity: 1;
    animation-name: wave;
    animation-duration: 0.5s;
    animation-direction: alternate;
    animation-iteration-count: 2;
    animation-fill-mode:forwards;
    &:nth-of-type(2){
        animation-delay: .1s;
    }
    &:nth-of-type(3){
        animation-delay: .2s;
    }
    &:nth-of-type(4){
        animation-delay: .3s;
    }
    &:nth-of-type(5){
        animation-delay: .4s;
    }
    &:nth-of-type(6){
        animation-delay: .5s;
    }
    &:nth-of-type(7){
        animation-delay: .6s;
    }
    &:nth-of-type(8){
        animation-delay: .7s;
    }
    &:nth-of-type(9){
        animation-delay: .8s;
    }
    &:nth-of-type(10){
        animation-delay: .9s;
    }
}

///////////////////////////////////

// ================================================
// アコーディオン
// ================================================
.js-arrow {
    transition: 0.5s ease-in-out;
}
.is-arrowActive {
    transform: rotate(90deg);
}

.is-defaultOpen {
    display: block;
}

// ================================================
// スクロールアニメ
// ================================================
* {
    //Textの出現アニメ
    * {
        .is-bgShow {
            animation-name: bgextendTxt;
            animation-duration: .8s;
            animation-delay: .8s;
            animation-fill-mode: forwards;
            opacity: 0;
        }
        @keyframes bgextendTxt{
            0% {
            opacity: 0;
            }
            100% {
            opacity: 1;
            }
        }
    }
    //bgスライドインテキスト////////////////
    /*左から右*/
    * {
        @mixin bgLRextend ($duration:1.5s){
            animation-name: bgLRextend;
            animation-duration: $duration;
            animation-fill-mode: forwards;
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            z-index: 10;
            width: 100%;
            height: 100%;
        }
        .is-bgLRextend::after{
            @include bgLRextend;
            background-color: $main;/*伸びる背景色の設定*/
        }
        .is-bgLRextend2::after{
            @include bgLRextend(2.5s);
            background-color: $main;/*伸びる背景色の設定*/
        }
        .is-bgLRextend3::after{
            @include bgLRextend(3.2s);
            background-color: $main;/*伸びる背景色の設定*/
        }

        @keyframes bgLRextend{
            0% {
                transform-origin:left;
                transform:scaleX(0);
            }
            50% {
                transform-origin:left;
                transform:scaleX(1);
            }
            50.001% {
                transform-origin: right;
            }
            100% {
                transform-origin: right;
                transform:scaleX(0);
            }
        }
    }
    /* スクロールをしたら出現する要素 初期値0*/
    .js-bgLRextend,
    .js-bgLRextend2,
    .js-bgShow_txt,
    .js-bgShow_txt2,
    .js-bgLRextend_scroll,
    .js-bgShow_txt_scroll,
    .js-bgLRextend_scroll2,
    .js-bgShow_txt_scroll2,
    .js-bgLRextend_scroll3,
    .js-bgShow_txt_scroll3 {
        opacity: 0;
    }
}

// ================================================
// アンダーライン
// ================================================

@mixin bgLRextend ($duration: 2s, $b:10%, $h:25%, $z:-1){
    animation-name: underL;
    animation-duration: $duration;
    animation-fill-mode: forwards;
    content: "";
    position: absolute;
    left: 0;
    bottom: $b;
    z-index: $z;
    width: 100%;
    height: $h;
    background-color: $yellow;
}

@keyframes underL {
    0% {
        transform-origin:left;
        transform:scaleX(0);
    }
    100% {
        transform-origin:left;
        transform:scaleX(1);
    }
}

.is-underL {
    position: relative;
    &::after {
        @include bgLRextend
    }
}

.is-underL_scroll {
    position: relative;
    &::after {
        @include bgLRextend(3s,10%,25%,-1)
    }
}

.is-underL_click {
    position: relative;
    &::after {
        @include bgLRextend(2s,rem(0),rem(4),0)
    }
}

// ================================================
// topページのskill
// ================================================

.is-borderActive {
    &::before,
    &::after {
        width: 100%;
    }
    .is-frameAnime {
        &::before,
        &::after {
            height: 100%;
        }
    }
}

.is-skillActive {
    filter: grayscale(0%) drop-shadow(3px 3px 2px rgba(0,0,0,0.4));
}

.is-skillOpen {
    display: block !important;
}

// ========================================
// topのお知らせhoverアニメ
// ========================================

.is_frameMove {
    backdrop-filter: blur(3px) brightness(80%);
    &::before {
        transform: rotate(-12.75deg);
        opacity: 0.3;
    }
    &::after {
        transform: rotate(12.75deg);
        opacity: 0.3;
    }
}

// =========================
// スライドインアニメ
// =========================

.is-fadeIn_shadow {
    animation-name: fadeIn;
    animation-delay: 0.5s;
    animation-duration: 3s;
    animation-fill-mode: forwards;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
        transform: translateY(30%);
    }
    25% {
        opacity: 1;
        transform: translateY(0);
    }
    100% {
        box-shadow: 16px 16px $main;
        opacity: 1;
        transform: translateY(0);
    }
}
.is-fadeIn_shadow_2n {
    animation-name: fadeIn_2n;
    animation-delay: 0.5s;
    animation-duration: 3s;
    animation-fill-mode: forwards;
}

@keyframes fadeIn_2n {
    0% {
        opacity: 0;
        transform: translateY(30%);
    }
    25% {
        opacity: 1;
        transform: translateY(0);
    }
    100% {
        box-shadow: -16px 16px $main;
        opacity: 1;
        transform: translateY(0);
    }
}