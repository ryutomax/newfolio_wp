@use "global" as *;

.p-works {
    padding-right: 0;
    padding-left: 0;
}
.p-works_inner {
}

.p-works_txt {
    text-align: center;
    font-size: rem(24);
    line-height: 1.5;
    max-width: rem(688);
    margin: 0 auto;
    margin-bottom: rem(72);
    padding-right: rem(8);
    padding-left: rem(8);
}

.p-works_txtUpper {
    margin-bottom: rem(64);
}

.p-works_txtPass {
}

.p-works_pass {
    text-align: start;
    display: inline-block;
}

.p-works_cont {
    overflow: hidden; //横スクロール回避
}

.p-works_list {
}

.p-works_item {
    padding: rem(16);
}

.p-works_itemInner {
    &:hover {
        .p-works_metaWrapper  {
            opacity: 1;
        }
    }
}

.p-works_img {
    position: relative;
}

.p-works_imgInner {
    padding: 1rem;
}

.p-works_metaWrapper {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(4, 67, 85, 0.6);
    opacity: 0;
    transition: 1s ease-in-out;
    padding: rem(24);
}

.p-works_metas {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
}

.p-works_meta {
    color: $white;
    font-size: rem(18);
    line-height: 1.5;
    text-shadow: 2px 2px 3px $navy;
    &::before {
        content: "▶︎";
        margin-right: rem(16);
    }
}

.p-works_itemTtl {
    display: inline-block;
    font-size: rem(24);
    margin-top: rem(24);
    margin-left: rem(16);
    position: relative;
}

.p-works_inner .swiper-container .swiper-wrapper {
    transition-timing-function: linear !important;
}

@include mq (sp) {
    .p-works_meta {
        font-size: rem(14);
    }
}

@include mq () {
    .p-works_txt {
        font-size: rem(18);
        margin-bottom: rem(72);
    }
    .p-works_txtUpper {
        margin-bottom: rem(32);
    }
}

@include mq (pc) {
    .p-works_meta {
        font-size: rem(16);
    }
}